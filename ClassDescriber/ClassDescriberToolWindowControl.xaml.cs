using System.Windows;
using System.Windows.Controls;
using Microsoft.VisualStudio.Shell;
using System.Threading.Tasks;

namespace ClassDescriber
{
    public partial class ClassDescriberToolWindowControl : UserControl
    {
        public ClassDescriberToolWindowControl()
        {
            InitializeComponent();
            UpdateStatus();
        }

        public void SetText(string text)
        {
            SummaryBox.Text = text ?? "";
            UpdateStatus();
        }

        private void UpdateStatus()
        {
            var text = SummaryBox.Text ?? "";
            var lines = string.IsNullOrEmpty(text) ? 0 : text.Split('\n').Length;
            TxtStatus.Text = $"{text.Length} chars • {lines} lines";
        }

        private void Copy_Click(object sender, RoutedEventArgs e)
        {
            try { Clipboard.SetText(SummaryBox.Text ?? ""); } catch { /* ignore */ }
        }

        private async void InsertXml_Click(object sender, RoutedEventArgs e)
        {
            await RoslynActions.TryInsertXmlSummaryForCaretClassAsync("Summary generated by Class Describer.");
        }

        private async void Refresh_Click(object sender, RoutedEventArgs e)
        {
            var summary = await RoslynActions.TryDescribeCaretClassAsync() ?? "No class found under caret.";
            SetText(summary);
        }

        private void Wrap_Checked(object sender, RoutedEventArgs e)
        {
            SummaryBox.TextWrapping = ChkWrap.IsChecked == true ? TextWrapping.Wrap : TextWrapping.NoWrap;
        }

        private void Mono_Checked(object sender, RoutedEventArgs e)
        {
            SummaryBox.FontFamily = (ChkMono.IsChecked == true) ? new System.Windows.Media.FontFamily("Consolas")
                                                                : SystemFonts.MessageFontFamily;
        }
    }
}
